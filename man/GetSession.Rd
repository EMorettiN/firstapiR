% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/firstapiR_http.R
\name{GetSession}
\alias{GetSession}
\title{Create a FIRST API session.}
\usage{
GetSession(username, key, season = .default_season, format = "data.frame",
  staging = FALSE)
}
\arguments{
\item{username}{A character vector containing the username assigned by FIRST.}

\item{key}{A character vector containing the authorization key assigned by
FIRST, or the value "key".}

\item{season}{An integer vector containing the 4-digit year. Defaults to the
current year. Must be equal to or less than the current season and greater
than or equal to 2015.}

\item{format}{A character vector that specifies the data format that will be
returned by firstapiR functions. Can be "json", "data.frame", or "xml".
Defaults to "data.frame". Case insensitive.}

\item{staging}{A logical vector. If set to \code{TRUE}, firstapiR uses the
  staging URL. Defaults to \code{FALSE}.

Throws an error if season, format, or staging arguments are incorrect.}
}
\value{
A Session object containing all GetSession parameters.
  The class attribute is set to c("list", "Session")
}
\description{
Every FIRST API function requires a session as its first parameter.
}
\details{
The session is an R list that contains the FIRST API username, authorization
key, season, format, and a boolean value that specifies whether to use
the staging server instead of the production server.

The key field of the Session object may be set to the value "key". If this is
done, the firstapiR functions will skip the HTTP request and will extract
example data from the R/sysdata.rda file. This function is for testing and
demonstrations when no internet connection or valid authorization key is
available. Example data frames returned by firstapiR functions will have
their "local_test_data" attribute set to TRUE and the "time_downloaded"
attribute will be set to the date and time that the example data was
downloaded from the server and stored in the R/sysdata.rda file.
}
\examples{
sn <- GetSession("myUserName", "myAuthorizationKey")
sn <- GetSession("myUserName", "myAuthorizationKey", season = 2015)
sn$format <- "xml"
}


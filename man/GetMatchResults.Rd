% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/firstapiR_http.R
\name{GetMatchResults}
\alias{GetMatchResults}
\title{Get match scores and participating teams}
\usage{
GetMatchResults(session, event, level = "qual", team = NULL, match = NULL,
  start = NULL, end = NULL, expand_cols = FALSE)
}
\arguments{
\item{session}{A Session object created with \code{GetSession()}.}

\item{event}{A character vector containing a FIRST API event code
(see \code{GetEvents}).}

\item{level}{A character vector containing either \emph{"qual"} or
\emph{"playoff"}. Defaults to \emph{"qual"}. Optional.}

\item{team}{An integer vector containing a team number. Optional. Cannot
specify \code{match} when \code{team} is specified.}

\item{match}{An integer vector containing a match number. Optional. If
specified, \code{GetMatchResults} returns results for only the specified
match. If \code{level} is not specified, returns the results for the
qualification match. To get playoff match results, set \code{level} to
\emph{"playoff"}. Cannot specify \code{team} when \code{match} is
specified.}

\item{start}{An integer vector containing the earliest match to
Optional.}

\item{end}{An integer vector containing the latest match to return. Optional.}

\item{expand_cols}{A logical value that defaults to \code{FALSE}. If
\code{TRUE}, the dataframe will include one row for each scheduled match,
with a different column for each team. If \code{FALSE}, there will be six
rows for each match, with each row listing one assigned team and their
station. Optional.}
}
\value{
Depending on the \code{session$format} value, returns JSON text, an
  XML::XMLDocument object, or a data.frame with class set to
  c("data.frame", "Schedule").

  \strong{Data Frame Columns}
  \enumerate{
     \item \emph{actualStartTime}: character
     \item \emph{description}: character
     \item \emph{tournamentLevel}: factor
     \item \emph{matchNumber}: integer
     \item \emph{postResultTime}: character}

     If expand_cols == \emph{FALSE}
       \enumerate{
         \item \emph{teamNumber}: factor
         \item \emph{station}: factor (Red1, Red2, Red3, Blue1, Blue2, Blue3)
         \item \emph{surrogate}: logical
         \item \emph{scoreFinal, scoreAuto, scoreFoul}: integer}

     If expand_cols == \emph{TRUE}
       \enumerate{
         \item \emph{scoreRedFinal, scoreRedAuto, scoreRedFoul}: integer
         \item \emph{scoreBlueFinal, scoreBlueAuto, scoreBlueFoul}: integer
         \item \emph{Red1.team, Red2.team, Red3.team}: factor
         \item \emph{Blue1.team, Blue2.team, Blue3.team}: factor
         \item \emph{Red1.surrogate, Red2.surrogate, Red3.surrogate}: logical
         \item \emph{Blue1.surrogate, Blue2.surrogate,
           Blue3.surrogate}: logical}

  \strong{Data Frame Attributes}
    \itemize{
    \item \emph{url}: URL submitted to FIRST API
    \item \emph{time_downloaded}: Local System time that the object was
    downladed from the FIRST API server.
    \item \emph{local_test_data}: \code{TRUE} if data was extracted from
      R/sysdata.rda file.}
}
\description{
See the \emph{Match Results} section of the FIRST API documentation for more
details.
}
\details{
The URL format is:

\code{https://frc-api.firstinspires.org/v2.0/season/matches/event
?tournamentLevel=level&teamNumber=team&matchNumber=match&start=start&end=end}
}
\examples{
sn <- GetSession("username", "key")
GetMatchResults(sn, "PNCMP", level="qual")
GetMatchResults(sn, "PNCMP", team="2990")
GetMatchResults(sn, "WAAMV", match=2, level="playoff")
GetMatchResults(sn, "CMP-ARCHIMEDES", level="qual", start=10, end=20)
}

